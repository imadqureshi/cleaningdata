typeof(features2)
typeof(training_set)
typeof(test_set)
rbind(features2, training_set)
rbind(features2, training_set)[, 1]
rbind(features2, training_set)[, -1]
names(features2)
unname(features2)
features2 <- unname(features2)
names(training_set)
names(rbind(features2, unname(training_set)))
rbind(features2, unname(training_set))
names(rbind(features2, training_set))
dim(features2)
features2[1, 1:5]
unname(training_set)
training_set2 <- unname(training_set)
rbind(features2, training_set)
rbind(features2, training_set2)
rm training_set2
rm (training_set2)
rm (features2)
rbind(features, training_set)
rbind(data.frame(features), training_set)
rbind(unname(data.frame(features)), training_set)
data_set <- features[1, ]
names(data_set)
dim(data_set)
rm(data_set)
data_set <- data.frame(features[1, ])
dim(data_set)
data_set
dput(data_set)
rm(data_set)
data_set <- data.frame(features[1, ], stringsAsFactors=FALSE)
dim(data_set)
dput(data_set)
names(data_set)
t(data_set)
names(t(data_set))
data_set <- unname(data_set)
names(t(data_set))
dput(data_set)
data_set <- t(data_set)
names(data_set)
dim(data_set)
data_set[1, 1:5]
rbind(data_set, training_set)
rbind(data_set, training_set)[1:5, 1:5]
rbind(data_set, unname(training_set))[1:5, 1:5]
dput(training_set)
dput(head(data_set, 10))
apply(data_set, function(x) "names<-" (x, x[1,]))
apply(data_set, function(x) names(x)<-x[1,]))
apply(data_set, function(x) names(x)<-x[1,])
lapply(data_set, function(x) names(x)<-x[1,])
names(data_set) <- data_set[1, ]
names(data_set)
dim(data_set)
rbind(data_set, training_set)
rbind(data_set, training_set)[1:5, 1:5]
training_set2 <- unname(training_set)
rbind(data_set, training_set2)[1:5, 1:5]
names(training_set2) <- names(data_set)
rbind(data_set, training_set2)[1:5, 1:5]
names(training_set2)
dim(training_set2)
dim(training_set)
names(training_set)
names(training_set2)
names(data_set)
dput(data_set)
dput(training_set2)
dput(data_set)
rbind(data_set, training_set)
rbind(data_set, training_set)[1:5, 1:5]
rbind(data_set, training_set2)[1:5, 1:5]
identical(names(data_set), names(training_set2))
names(training_set2)
names(data_set)
data_set
data_set[1, 1:10]
training_set2[1, 1:10]
training_set2[0, 1:10]
names(training_set2) <- names(data_set)
training_set2[0, 1:10]
data_set[1, 1:10]
data_set[0, 1:10]
names(data_set)
data_set[0, 1:10]
training_set2[0, 1:10]
data_set[1, 1:10]
names(data_set) <- data_set[1,]
data_set[0, 1:10]
names(data_set) <- names(training_set)
data_set[0, 1:10]
data_set[0, 1:15]
training_set2[0, 1:10]
data_set[1, ]
data_set[1, 5]
data_set[1, 1:5]
training_set2[0, 1:10]
data_set[0, 1:10]
dput(head(data_set, 10))
dput(head(training_set, 1))
dput(head(training_set2, 1))
data.frame(data_set)
data_set <- data.frame(data_set)
names(data_set)
names(data_set) <- names(training_set2)
names(data_set)
data_set[0, 1:10]
training_set[0, 1:10]
training_set2[0, 1:10]
dim(data_set)
rbind(data_set, training_set)[1:5, 1:8]
rbind(data_set, training_set2)[1:5, 1:8]
rbind(data_set, training_set2)[1:5, 1:5]
rm(data_set)
data_set <- data.frame(features)
dim(data_set)
names(data_set)
names(data_set) <- data_set[1, ]
names(data_set)
data_set
data_set[1, ]
dim(data_set)
names(data_set)
names(data_set) <- names(training_set2)
names(data_set)
dim(data_set)
data_set <- data_set[0, ]
dim(data_set)
names(data_set)
rbind(data_set, training_set2)[1:5, 1:5]
rm(training_set2)
rm(data_set)
dput(features)
features <- data.frame(features)
dput(features)
data_set <- features
names(data-set) <- data_set[1, ]
data_set[1, ]
data_set[1, ]
names(data_set)
unname(data_set)
data_set <- unname(data_set)
names(data_set) <- data_set[1, ]
names(data_set)
names(data_set) <- data_set[2, ]
names(data_set)
data_set
dim(data_set)
data_set[1, ]
data_set[2, ]
data_set[1, 1:561]
names(features)
dim(features)
features[1, ]
rm(data_set)
dim(features)
names(features)
features[1, ]
data_set <- features
names(data_set)
unname(data_set)
data_set <- unname(data_set)
names(data_set)
data_set[1, ]
names(data_set) <- data_set[1, ]
names(data_set)
dput(data_set)
rm(data_set)
dput(features)
data_set <- data.frame(features, stringsAsFactors=FALSE)
dput(data_set)
dim(data_set)
names(data_set
)
names(data_set) <- data_set[1, ]
names(data_set)
rm(features)
features <- read.table("../features.txt", stringsAsFactors=FALSE)
dim(features)
features <- data.frame(features[, 2], stringsAsFactors=FALSE)
names(features)
features <- rename(features, c("features...2." = "col1"))
names(features)
features <- t(features)
names(features)
dput(features)
features
features <- unname(features)
features
dim(features)
dput(features)
rm(data_set)
data_set <- features
dim(data_set)
names(data_set)
dput(data_set)
names(data_set) <- data_set[1, ]
names(data_set)
dim(data_set)
data_set <- data_set[0, ]
dim(data_set)
data_set
names(data_set)
names(data_set) <- data_set[1, ]
rm(data_set)
data_set <- features
names(data_set)
data_set
names(data_set) <- data_set[1, ]
names(data_set)
data_set
data_set[1, 1:5]
dim(data_set)
rbind(data_set, training_set)[1:5, 1:5]
dput(data_set)
data.frame(data_set)
data_set <- data.frame(data_set)
dput(data_set)
rm(data_set)
data_set <- features
names(data_set)
names(data_set) <- data_set[1, ]
dput(data_set)
rm(data_set)
data_set <- features
names(data_set) <- data.frame(data_set[1, ])
dput(data_set)
rm(data_set)
dput(data_set)
data_set <- features
names(data_set) <- data_set[1, ]
data.frame(data_set)
dput(data_set)
names(data_set)
data_set[0, ]
data_set[1, ]
names(data_set[0, ])
data_set[0, ]
names(data_set)
dput(data_set)
data_set <- data.frame(data_set, stringsASFactors=FALSE)
dput(data_set)
names(data_set) <- data_set[1, ]
dput(data_set)
colnames(data_set)
data_set
colnames(data_set, data_set[1, ])
data_set[1, ]
colnames(data_set, features[1, ])
features[1]
features[1, ]
?colnames
colnames(data_set) <- features[1, ]
names(data_set)
dim(data_set)
data_set[0, 1:561]
dim(data_set[0, 1:561])
data_set <- data_set[0, 1:561]
data_set
features
rm(data_set)
data_features
data_set <- features
colnames(data_set)
colnames(data_set) <- features[1, ]
colnames(data_set)
dput(data_set)
dim(data_set)
data_set <- data_set[0, ]
dim(data_set)
data_set
rbind(data_set, traning_s)
rbind(data_set, training_set)
rbind(data_set, training_set)[1:5, 1:5]
training_set2 <- training_set
colnames(training_set2) <- colnames(data_set)
rbind(data_set, training_set)[1:5, 1:5]
data_set <- data.frame(data_set, stringsAsFactors = FALSE)
rbind(data_set, training_set)[1:5, 1:5]
names(data_set)
names(training_set2)
rbind(data_set, training_set2)[1:5, 1:5]
rbind(data_set, training_set, test_set)
colnames(test_set) <- colnames(data_set)
rbind(data_set, training_set, test_set)
colnames(test_set)
colnames(data_set)
colnames(training_set2)
colnames(data_set) <- colnames(training_set2)
colnames(data_set)
colnames(test_set) <- colnames(training_set2)
colnames(test_set)
rbind(data_set, training_set, test_set)
rbind(data_set, training_set2, test_set)
data_set <- rbind(data_set, training_set2, test_set)
dim(data_set)
dput(head(data_set, 2))
cbind(data_set, subject_test)
cbind(data_set, rbind(subject_train, subject_test))
colnames(subject_test)
?colnames
colnames(data_set[561])
data_set <- cbind(data_set, rbind(subject_train, subject_test))
colnames(data_set[562])
colnames(data_set[562]) <- "subject"
colnames(data_set[562])
colnames(data_set)
colnames(data_set[562])
colnames(data_set)[562]
colnames(data_set)[562] <- "subject"
colnames(data_set)[562]
colnames(data_set[562])
colnames(data_set)
data_set
getwd()
y_train <- read.table("y_train.txt", stringsAsFactors = FALSE)
y_test <- read.table("../test/y_test.txt", stringsAsFactors = FALSE)
data_set <- cbind(data_set, rbind(y_train, y_test))
dim(data_set)
names(data_set)
unique(data_set$V1)
colnames(data_set)[563] <- "activity"
unique(data_set$activity)
data_set$activity
data_set[data_set$activity==5]
data_set[data_set$activity=="5"]
data_set$activity
data_set[data_set$activity==5]
colnames(data_set)
data_set
dput(data_set)
dput(head(data_set, 2))
data_set[which(data_set$activity==5)]
data_set[which(data_set$subject==5)]
data_set[which(data_set$angle(X,gravityMean)==5)]
data_set[which(data_set$"angle(X,gravityMean)"==5)]
data_set[which(data_set$"activity"==5)]
data_set[which(data_set$"subject"==5)]
data_set[data_set$"fBodyAccMag-skewness()" < 1]
data_set[data_set$"fBodyAccMag-skewness()" < "1"]
data_set[data_set$"fBodyAccMag-skewness()" < '1']
colnames(data_set)
data_set[as.numeric(data_set$activity) == 5]
subject_test
subject_test$V1
subject_test[subject_test$V1 == 24]
subject_test[which (subject_test$V1 == 24)]
subject_test[, which (subject_test$V1 == 24)]
subject_test[, subject_test$V1 == 24]
?subset
subset(subject_test, subject_test$V1 == 24)
subset (data_set, data_set$activity == 5)
subset (data_set, data_set$activity == 5)[563]
subset (data_set, data_set$activity == 5)[563] <- "WALKING"
(subset (data_set, data_set$activity == 5))[563] <- "WALKING"
(subset (data_set, data_set$activity == 5)[563]) <- "WALKING"
subset (data_set, data_set$activity == 5)[563]
typeof(subset (data_set, data_set$activity == 5)[563] )
data_set$activity[data$activity==5]
data_set$activity[data$activity==5] <- "STANDING"
data_set$activity[data$activity==5]
data_set$activity[data_set$activity==5]
data_set$activity[data_set$activity==5] <- "STANDING"
data_set$activity[data_set$activity=='STANDING']
data_set$activity[data_set$activity==1] <- "WALKING"
data_set$activity[data_set$activity==2] <- "WALKING_UPSTAIRS"
data_set$activity[data_set$activity==3] <- "WALKING_DOWNSTAIRS"
data_set$activity[data_set$activity==4] <- "SITTING"
data_set$activity[data_set$activity==5] <- "STANDING"
data_set$activity[data_set$activity==6] <- "LAYING"
data_set$activity
?rm
rm (ls ( pattern == '^body'))
rm (ls ( pattern = '^body'))
ls(pattern=='^body')
?ls
ls (pattern = '^body.*')
rm (ls ( pattern = '^body.*'))
ls (pattern = '^body.*')
rm(ls(pattern='^body_.*'))
typeof(ls (pattern = '^body.*'))
typeof(as.list(ls (pattern = '^body.*')))
rm(as.list(ls(pattern='^body_.*')))
rm(ls(pattern='^body_.*'))
rm(list = ls(pattern='^body_.*'))
rm(list = ls(pattern='^total_.*'))
View(features)
?gsub
data_set[, grep(colnames(data_set) = '^.*mean().*|^.*std().*')]
data_set[, grep(colnames(data_set) == '^.*mean().*|^.*std().*')]
data_set[, grep('^.*mean().*|^.*std().*', colnames(data_set))]
dim(data_set[, grep('^.*mean().*|^.*std().*', colnames(data_set))])
dim(data_set)
mean_std <- data_set[, grep(colnames(data_set) = '^.*mean().*|^.*std().*')]
dim(data_set[, grep('^.*mean().*|^.*std().*', colnames(data_set))])
mean_std <- data_set[, grep('^.*mean().*|^.*std().*', colnames(data_set))]
?mean
?group_by
grouped_data <- group_by(data_set, subject, activity)
?n
summarize(grouped_data, mean)
summarize(grouped_data, colMeans(grouped_data, na.rm=TRUE))
dim(grouped_data)
colMeans(data_set)
colMeans(data_set, na.rm=TRUE)
colMeans(data_set[, 1:561], na.rm=TRUE)
colMeans(data_set[, 1:561])
dim(colMeans(data_set[, 1:561]))
summarize(grouped_data, colMeans(grouped_data[, 1:561], na.rm=TRUE))
summarize(grouped_data, colMeans(grouped_data[, 1:561]))
colMeans(grouped_data)
colMeans(grouped_data[, 1:561])
dim(grouped_data)
colMeans(grouped[, 1:561])
colMeans(grouped_data[, 1:561])
data_set[, lapply(data_set, mean), by = data_set$subject]
data_set[, lapply(data_set, mean), by = subject]
?lapply
data_set[, lapply(.SD, mean), by=colnames(data_set)[562:563]]
data_set[, lapply(.SD, mean, by=colnames(data_set)[562:563])]
data_set[, lapply(.SD, mean, by=list(subject, activity))
]
aggregate(data_set[, 1:561], data_set[, 562:563], FUN=mean)
dim(aggregate(data_set[, 1:561], data_set[, 562:563], FUN=mean))
aggregate(data_set[, 1:561], data_set[, 562:563], FUN=mean)[559:563]
dim(aggregate(data_set[, 1:561], data_set[, 562:563], FUN=mean))
aggregate(data_set[, 1:561], data_set[, 562:563], FUN=mean)[1:5 ,559:563]
names (aggregate(data_set[, 1:561], data_set[, 562:563], FUN=mean)[1:5 ,559:563])
names (aggregate(data_set[, 1:561], data_set[, 562:563], FUN=mean))
aggregate(data_set[, 1:561], data_set[, 562:563], FUN=mean)[1:5 , 1:5]
aggregate(data_set[, 1:561], data_set[, 562:563], FUN=mean)[1:30 , 1:5]
aggregate(data_set[, 1:561], data_set[, 562:563], FUN=mean)[1:31 , 1:5]
aggregate(data_set[, 1:561], data_set[, 562:563], FUN=mean)[1:62 , 1:5]
dim(aggregate(data_set[, 1:561], data_set[, 562:563], FUN=mean))
rm(list=ls())
run_analysis
list.files()
getwd()
../../run_analysis
setwd("../../")
getqwd()
getwd()
list.files()
run_analysis
run_analysis.R
R run_analysis.R
source("run_analysis.R")
rm(list=ls())
source("run_analysis.R")
closeAllConnections()
getwd()
source("../../r_analysis.R")
source("../../run_analysis.R")
rm(list=ls())
closeAllConnections()
source("../../run_analysis.R")
rm(list=ls())
closeAllConnections()
source("../../run_analysis.R")
rm(list=ls())
closeAllConnections()
source("../../run_analysis.R")
average_all <- tbl_df(average_all)
average_all
?file.exists
?wd
wd
?return
return 0
return (0)
?exit
print
?print
?message
message("Imad the great")
message("Imad the great" + "loves stat")
te <- "loves that"
message("Imad the great" + te)
message("Imad the great + te)
""
)
message("Imad the great" + as.character(te))
paste("Imad the great")
paste("Imad the great" + te)
paste("Imad the great", te)
message("Imad the great", te)
wd <- "/Users/iqureshi/MachineLearning/cleaningdata/project/UCI HAR Dataset/trai"
paste (wd, " does not exist. Good bye.")
clear
cls
return(0);
return(0);
}
?stop
?quit
rm(list = ls())
paste (wd, " does not exist. Good bye.")
#working directory. Please set according to your environment
source(run_analysis.R)
getwd()
source("../../run_analysis.R")
source("../../run_analysis.R")
source("../../run_analysis.R")
source("../../run_analysis.R")
source("../../run_analysis.R")
rm(list = ls())
source("../../run_analysis.R")
